- name: Basic Setup
  hosts: all
  gather_facts: false
  become: true
  tasks:
    - name: Check connectivity
      ansible.builtin.ping:

    - name: Set a hostname
      ansible.builtin.hostname:
        name: "{{ node_hostname }}"

    - name: Copy /etc/hosts template
      ansible.builtin.copy:
        backup: true
        src: ./files/hosts
        dest: /tmp/hosts

    - name: Insert/Update configuration using a local file and validate it
      ansible.builtin.blockinfile:
        block: "{{ lookup('file', './files/hosts') }}"
        path: /etc/hosts
        backup: yes

    - name: Disable swap on all the nodes 
      ansible.builtin.shell: swapoff -a 

    - name: add br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present

    - name: sysctl params required by setup 
      ansible.builtin.shell: |
          cat <<EOF | tee /etc/sysctl.d/k8s.conf
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          EOF


    - name: apply sysctl params without reboot 
      ansible.builtin.shell: sysctl --system

    - name: Setting up the repository
      ansible.builtin.shell: |
        sudo yum install -y yum-utils
        sudo yum-config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
        sudo yum install -y containerd.io

    - name: Install containerd package
      ansible.builtin.shell: sudo yum install -y containerd.io

    - name: create containerd config file 
      ansible.builtin.shell: |
        mkdir -p /etc/containerd
        containerd config default | tee /etc/containerd/config.toml

    - name: Update containerd configuration to use SystemdCgroup 
      ansible.builtin.shell: |
        sed -i -e 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
        sed -i -e 's|sandbox_image = "registry.k8s.io/pause:3.8"|sandbox_image = "registry.k8s.io/pause:3.9"|g' /etc/containerd/config.toml


    - name: Enable containerd, and issue "systemctl daemon-reload" to pick up on configuration changes
      ansible.builtin.systemd:
        name: containerd
        daemon_reload: yes
        state: started
        enabled: yes


    # Kubeadm installation and setup 
    - name: Add kubernetes repo 
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/
        enabled=1
        gpgcheck=1
        gpgkey=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/repodata/repomd.xml.key
        EOF
      

    - name: Install kubelet, kubeadm and kubectl
      ansible.builtin.shell: yum install -y kubelet kubeadm kubectl yum-plugin-versionlock


    - name: hold kubelet, kubeadm and kubectl 
      ansible.builtin.shell: yum versionlock add kubelet kubeadm kubectl


- name: Setting up master node (control-plane)
  hosts: master
  become: true
  tasks:
    - name: init kubeadm
      ansible.builtin.shell: kubeadm init --pod-network-cidr=10.0.0.0/16 --control-plane-endpoint "{{ansible_host}}:6443"


    - name: create ~/.kube directory
      ansible.builtin.file:
        path: ~/.kube
        state: directory
        mode: "0755"

    - name: copy kubeconfig file
      ansible.builtin.shell: sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

    - name: set the correct permission on kubeconfig file
      ansible.builtin.shell: sudo chown $(id -u):$(id -g) $HOME/.kube/config

    - name: install flannel
      ansible.builtin.shell: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml

    - name: Generate join token for the worker node 
      ansible.builtin.shell: sudo kubeadm token create --print-join-command
      register: join_node_token_command

    - name: Save join command as variable
      ansible.builtin.set_fact:
        join_node: "{{ join_node_token_command.stdout_lines[0] }}"

- name: Setting up Worker node (data-plane)
  hosts: workers
  become: true
  tasks:
    - name: add worker nodes to cluster
      shell: "sudo {{ hostvars['control-plane'].join_node }}"
